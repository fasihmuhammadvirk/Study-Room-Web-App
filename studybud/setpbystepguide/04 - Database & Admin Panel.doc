## about migrations ##

there are unapplied migration that are build in django like admin 
they have default tables for us that we can use 

to apply these migration into the database we use the command

cmd: python3 manage.py migrate

what this command will do is that it will built the database for us
now if we run our server we will not see unapplied Migrations

if we want the add our table we can use the django admin panel for it to see the sqlite database as we can not see the data and tables in sqlite3 

## models.py ##

we built our database structure in the model.py

we use the python classes that is inhertited from the django Models
the classes represent the database table  and its columns

every single attribute  of a class represents one column in the table
and every method represents one row in the table

for example :
python code                                 |   sql equivalent
------------------------------------------  |----------------------------------------------------------------------------------------------------
class Student(models.Model)                 | CREATE TABLE student (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(255), age INTERGER);
    id  = models.AutoField(...)             |     
    name = models.CharField(max_length=255) |  
    age = models.IntegerField()             |  

whenever we make a model we have to make migration 

cmd: python3 manage.py makemigrations

in migration folder  it will create a migrations file 
0001_initial.py
this will shows us all the migrations we made 
it is the process or the staging aera before we made it in the database

everytime we make migration a new file will gonna get generated

after this then we gonna migrate 
it wil go in the latest migration and migrate it into the database

cmd: python3 manage.py migrate

## admin panel ##

goto the django url and go url/admin
it will open a login page for us 
to login we have to have admin level acess

to create the admin user goto the terminal 
type command: python3  manage.py createsuperuser
then enter your email and password when prompted

now you have create a superuser
you can now access the admin panel

now you will not see the Room table in the admin cause to acces that in admin 
panel we have to register it 

## registering model into admin panel ##Â 

to register or give access of the table to the admin we have to give it acess to the admin
for that goto the the admin.py file in you current  app directory

now from .models import Room or whatever model you want the admin to acess

to give the acess we have to register it and for that we will use the python code

admin.site.register(Room or whatever your model is)


## to use the model data in the view and template ##

goto the view.py file 

then from .models import Room or anther model you want to use

then we can use that model in our view  function
like 
rooms = Room.objects.all() , it will get all the data items in the Room model